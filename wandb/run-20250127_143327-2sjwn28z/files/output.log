Found 1 files
Total tokens: 338026
/home/alexander/Projects/financial_projects/reasonable/train.py:416: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = GradScaler()
Epoch 1:   0%|                                                                                                                                                                             | 0/4740 [00:00<?, ?it/s]

Generated samples at step 0:
Prompt: Once upon a time
Generated: Once upon a time partners
 partners Milan Berkeleyfast Fowler scenes:
 grossly Carrier grosslyraid: encouragesimport
 melted
alph

 hideous A Fowlersafety Carrier
:

celer attitudes Carrierimport grosslyraid,commun: Ost Milan--------- Modi

 Noel revisedcelerimport Xan
 Xan
 WAR revolt Noeloshop Seasonsalphgorith unimagin Xan, prohibitsÑ‚ortality
 melted, Ronaldo410 pige hideous unimagin Modi Xan

 Ronaldo unmatchedimport points Gran
 grossly grossly WAR revolt

 Ronaldo
 crawl,Acknowled
,


Prompt: The meaning of life is
Generated: The meaning of life is Hide accordance
 fian CarrierTLhs resemblespie Milan,LoadLoad snatch incorporate better Modi temptedlicts
 Modi Rica
, nihil

:alphotericceler accordance ModiLoad pirates points Tuc
, pirates Ronaldo facts Modi Bye ring Milaniege

iege Rica container Carrier Theodore points
 Modi liquids revolt
 Baker Seasons points Milan ModiCombat points
pie
 facts Milan fian Milan Baker: factsceler, ring KY
 resembles Noel Ronaldo
 nihil
,, Carrier apocalyptic:
 container
 Xan facts Ronaldo nihil
Traceback (most recent call last):
  File "/home/alexander/Projects/financial_projects/reasonable/train.py", line 426, in <module>
    train_loss = train_one_epoch(
                 ^^^^^^^^^^^^^^^^
  File "/home/alexander/Projects/financial_projects/reasonable/train.py", line 183, in train_one_epoch
    scaler.scale(loss).backward()
  File "/home/alexander/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/home/alexander/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/alexander/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 6.14 GiB. GPU 0 has a total capacity of 23.76 GiB of which 1.16 GiB is free. Including non-PyTorch memory, this process has 22.46 GiB memory in use. Of the allocated memory 15.61 GiB is allocated by PyTorch, and 6.26 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/alexander/Projects/financial_projects/reasonable/train.py", line 426, in <module>
[rank0]:     train_loss = train_one_epoch(
[rank0]:                  ^^^^^^^^^^^^^^^^
[rank0]:   File "/home/alexander/Projects/financial_projects/reasonable/train.py", line 183, in train_one_epoch
[rank0]:     scaler.scale(loss).backward()
[rank0]:   File "/home/alexander/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/_tensor.py", line 581, in backward
[rank0]:     torch.autograd.backward(
[rank0]:   File "/home/alexander/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/autograd/__init__.py", line 347, in backward
[rank0]:     _engine_run_backward(
[rank0]:   File "/home/alexander/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
[rank0]:     return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
[rank0]:            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[rank0]: torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 6.14 GiB. GPU 0 has a total capacity of 23.76 GiB of which 1.16 GiB is free. Including non-PyTorch memory, this process has 22.46 GiB memory in use. Of the allocated memory 15.61 GiB is allocated by PyTorch, and 6.26 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
