Using device: cuda
Found 1 files
Total tokens: 338026
/home/alexander/Projects/financial_projects/reasonable/train.py:227: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = GradScaler()
Epoch 1:   0%|                                                                                                                     | 1/37913 [00:00<8:33:30,  1.23it/s, loss=10.9143, avg_loss=10.9143, lr=3.00e-04]
Traceback (most recent call last):
  File "/home/alexander/Projects/financial_projects/reasonable/train.py", line 237, in <module>
    train_loss = train_one_epoch(model, train_loader, optimizer, scheduler, scaler, device, epoch)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/alexander/Projects/financial_projects/reasonable/train.py", line 44, in train_one_epoch
    scaler.scale(loss).backward()
  File "/home/alexander/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/home/alexander/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/home/alexander/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.54 GiB. GPU 0 has a total capacity of 10.71 GiB of which 1.11 GiB is free. Including non-PyTorch memory, this process has 5.86 GiB memory in use. Of the allocated memory 4.10 GiB is allocated by PyTorch, and 1.57 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
